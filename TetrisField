import javax.swing.*;
import java.awt.*;

public class TetrisField extends JPanel {
    private final int ROWS = 20; // フィールドの行数
    private final int COLS = 10; // フィールドの列数
    private final int CELL_SIZE = 30; // セルのサイズ（ピクセル単位）

    private Tetromino currentTetromino; // 現在のテトリミノ

    public TetrisField() {
        setPreferredSize(new Dimension(COLS * CELL_SIZE, ROWS * CELL_SIZE)); // パネルの推奨サイズを設定
        setBackground(Color.BLACK); // 背景色を黒に設定
        int startCol = (COLS / 2) - 2; // 初期位置を中央に設定
        currentTetromino = Tetromino.createRandomTetromino(0, startCol); // ランダムなテトリミノを作成

        setFocusable(true); // キーボード入力を受け取るためにフォーカスを設定
    }

    public Tetromino getCurrentTetromino() {
        return currentTetromino;
    }

    public void setCurrentTetromino(Tetromino tetromino) {
        this.currentTetromino = tetromino;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); // 親クラスの描画処理を呼び出し
        g.setColor(Color.GRAY); // 描画色を灰色に設定
        
        // フィールドのグリッドを描画
        for (int row = 0; row < ROWS; row++) {
            for (int col = 0; col < COLS; col++) {
                g.drawRect(col * CELL_SIZE, row * CELL_SIZE, CELL_SIZE, CELL_SIZE); // 矩形を描画
            }
        }

        // 左右の壁を描画
        g.setColor(Color.DARK_GRAY);
        for (int row = 0; row < ROWS; row++) {
            g.fillRect(0, row * CELL_SIZE, CELL_SIZE, CELL_SIZE); // 左の壁
            g.fillRect((COLS - 1) * CELL_SIZE, row * CELL_SIZE, CELL_SIZE, CELL_SIZE); // 右の壁
        }

        // 現在のテトリミノを描画
        if (currentTetromino != null) {
            g.setColor(currentTetromino.getColor()); // テトリミノの色を設定
            int[][] shape = currentTetromino.getShape(); // テトリミノの形状を取得
            int rowOffset = currentTetromino.getRow(); // テトリミノの行オフセットを取得
            int colOffset = currentTetromino.getCol(); // テトリミノの列オフセットを取得
            for (int row = 0; row < shape.length; row++) {
                for (int col = 0; col < shape[row].length; col++) {
                    if (shape[row][col] == 1) { // テトリミノのブロックがある部分を描画
                        g.fillRect((colOffset + col) * CELL_SIZE, (rowOffset + row) * CELL_SIZE, CELL_SIZE, CELL_SIZE);
                    }
                }
            }
        }
    }
}